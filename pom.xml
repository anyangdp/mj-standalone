<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.mj</groupId>
    <artifactId>mj-parent</artifactId>
    <version>2.0.0-RELEASE</version>
    <name>mj-parent</name>
    <description>mj（Mission Jupiter）mj框架父pom </description>
    <packaging>pom</packaging>
    <properties>
        <java.version>1.8</java.version>
        <mj.version>2.0.0-RELEASE</mj.version>
        <springboot.version>2.7.3</springboot.version>
        <mysql-connector-java.version>5.1.46</mysql-connector-java.version>
        <druid.version>1.1.18</druid.version>
        <org.mapstruct.version>1.3.0.Final</org.mapstruct.version>
        <knife4j.version>3.0.2</knife4j.version>
        <mybatis-spring-boot-starter.version>2.0.0</mybatis-spring-boot-starter.version>
        <mybatis.version>3.5.1</mybatis.version>
        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>
        <rocketmq-spring-boot-starter.version>2.0.1</rocketmq-spring-boot-starter.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <org.projectlombok.version>1.18.20</org.projectlombok.version>
        <servlet.version>2.5</servlet.version>
        <java.version>1.8</java.version>
        <hibernate-validator.version>6.0.16.Final</hibernate-validator.version>
        <fastjson.version>2.0.9.graal</fastjson.version>
        <mybatis-typehandlers-jsr310>1.0.1</mybatis-typehandlers-jsr310>
        <rocketmq-client-version>4.5.2</rocketmq-client-version>
        <guava.version>33.0.0-jre</guava.version>
        <spring-boot-admin-starter-client.version>2.1.3</spring-boot-admin-starter-client.version>
        <easyexcel.version>2.2.6</easyexcel.version>
        <redisson.version>3.13.3</redisson.version>
        <docker.registry>镜像地址</docker.registry>
        <docker.username>用户名</docker.username>
        <docker.password>密码</docker.password>
    </properties>
    <modules>
        <module>mj-admin</module>
        <module>mj-common</module>
        <module>mj-framework</module>
        <module>mj-tool</module>
        <module>mj-system</module>
        <module>mj-security</module>
        <module>mj-activiti7</module>
    </modules>
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Web 相关 -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <scope>provided</scope>
                <version>${servlet.version}</version>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- 工具类相关 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId> <!-- use mapstruct-jdk8 for Java 8 or higher -->
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>

            <!-- DB 相关 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!-- 动态数据源 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>3.6.0</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.5.5</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>3.5.5</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${org.projectlombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-typehandlers-jsr310</artifactId>
                <version>${mybatis-typehandlers-jsr310}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <version>${rocketmq-client-version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin-starter-client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <!--    JWT的依赖    -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>0.9.1</version>
            </dependency>

            <!--插件中需要hj212解析，主程序需要引入-->
            <dependency>
                <groupId>com.github.xiaoyao9184.hj-t212-parser</groupId>
                <artifactId>hj-t212-parser</artifactId>
                <version>master-ac5d822c2e-1</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoyao9184.hj-t212-parser</groupId>
                <artifactId>hj-t212-translator</artifactId>
                <version>master-ac5d822c2e-1</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>3.0.0</version><!--一定要3.x.x,否则没有ELManager-->
            </dependency>
            <dependency>
                <groupId>org.glassfish.web</groupId>
                <artifactId>javax.el</artifactId>
                <version>2.2.4</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.0.2.Final</version>
            </dependency>

            <dependency>
                <groupId>com.mj</groupId>
                <artifactId>mj-common</artifactId>
                <version>${mj.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mj</groupId>
                <artifactId>mj-framework</artifactId>
                <version>${mj.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <pluginManagement>
            <plugins>
                <!-- 提供给 mapstruct 使用 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source> <!-- or higher, depending on your project -->
                        <target>${java.version}</target> <!-- or higher, depending on your project -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${org.mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${org.projectlombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <!-- 打包 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>3.2.3</version>
                </plugin>

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>1.4.8</version>
                    <configuration>
                        <repository>${docker.registry}/${project.artifactId}</repository>
                        <tag>latest</tag>
                        <username>${docker.username}</username>
                        <password>${docker.password}</password>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
